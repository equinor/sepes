name: Unit Tests
on:
  pull_request:    
    branches: [ master, develop ]  
  workflow_dispatch:
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      config: 'Release'
 
    steps:
    - uses: actions/checkout@v2  

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101   

    - name: Unit Tests - Restore
      working-directory: src/Sepes.Tests
      run: dotnet restore      

    - name: Unit Tests - Build
      working-directory: src/Sepes.Tests
      run: dotnet build --configuration $config --no-restore
 
    - name: Unit Tests - Set PR build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3

      # set report file and title 
    - name: Unit Tests - Set test title
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Unit Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
            else
              echo "title=Unit Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV

            fi

      # run tests with built project
    - name: Unit Tests - Run and collect coverage
      working-directory: src/Sepes.Tests    
      run: dotnet test --no-restore --no-build --configuration $config --collect:"XPlat Code Coverage" --settings unittests.runsettings --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};" 

    # add report as PR comment (if PR)
    - name: Unit Tests - Add PR comment
      uses: machine-learning-apps/pr-comment@master
      if: ${{always() && github.event_name == 'pull_request'}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}     

    - name: Unit Tests - Upload test report as artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Unit Test Run'
        path: ${{github.workspace}}/${{env.file_name}}

    # generate coverage report
    - name: Build unit test coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:src/Sepes.Tests/TestResults/**/coverage.cobertura.xml -targetdir:${{github.workspace}}/CodeCoverage/UnitTests -reporttypes:HtmlSummary -title:"Unit Tests"

    # upload code coverage report as build artifact
    - name: Upload coverage report as build artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Unit Test Coverage Report'
        path: ${{github.workspace}}/CodeCoverage/UnitTests/summary.htm     
   